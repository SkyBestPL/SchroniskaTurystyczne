@using System.Diagnostics
@model SchroniskaTurystyczne.ViewModels.ShelterSearchViewModel

@{
    ViewData["Title"] = "Dostępne Schroniska";
}

<div class="search-bar">
    <form asp-action="Index" asp-controller="Shelters" method="get" id="mainSearchForm">
        <div class="row">
            <div class="col">
                <input asp-for="SearchTerm" class="form-control" placeholder="Wpisz nazwę lub miasto..." />
            </div>
            <div class="col">
                <input asp-for="City" class="form-control" placeholder="Miasto" />
            </div>
            <div class="col">
                <input asp-for="Street" class="form-control" placeholder="Ulica" />
            </div>

            @if (Model.SelectedTagIds != null)
            {
                @foreach (var tagId in Model.SelectedTagIds)
                {
                    {
                        Debug.WriteLine($"Processing tagId: {tagId}");
                    }
                    <input type="hidden" name="SelectedTagIds" value="@tagId" />
                }
            }

            @if (Model.SelectedRoomTypeIds != null)
            {
                @foreach (var roomTypeId in Model.SelectedRoomTypeIds)
                {
                    {
                        Debug.WriteLine($"Processing tagId: {roomTypeId}");
                    }
                    <input type="hidden" name="SelectedRoomTypeIds" value="@roomTypeId" />
                }
            }

            <div class="col">
                <button type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#filterModal">
                    Filtruj
                </button>
                <button type="submit" class="btn btn-primary">Szukaj</button>
            </div>
        </div>
        <div class="col">
            <select asp-for="SelectedCategoryId" class="form-select" asp-items="@(new SelectList(Model.AvailableCategories, "Id", "Name"))">
                <option value="">Wszystkie schroniska</option>
            </select>
        </div>
    </form>
</div>

<div class="modal fade" id="filterModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Filtrowanie schronisk</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="filter-form">
                    <h6>Tagi schronisk</h6>
                    @foreach (var tag in Model.AvailableTags)
                    {
                        {
                            Debug.WriteLine($"Processing tag: {tag.Id} - {tag.Name}");
                        }
                        <div class="form-check">
                            <input class="form-check-input tag-filter" type="checkbox"
                                   value="@tag.Id"
                                   id="tag-@tag.Id"
                            @(Model.SelectedTagIds?.Contains(tag.Id) == true ? "checked" : "")>
                            <label class="form-check-label" for="tag-@tag.Id">
                                @tag.Name
                            </label>
                        </div>
                    }

                    <h6 class="mt-3">Typy pokoi</h6>
                    @foreach (var roomType in Model.AvailableRoomTypes)
                    {
                        {
                            Debug.WriteLine($"Processing type: {roomType.Id} - {roomType.Name}");
                        }
                        <div class="form-check">
                            <input class="form-check-input room-type-filter" type="checkbox"
                                   value="@roomType.Id"
                                   id="roomType-@roomType.Id"
                            @(Model.SelectedRoomTypeIds?.Contains(roomType.Id) == true ? "checked" : "")>
                            <label class="form-check-label" for="roomType-@roomType.Id">
                                @roomType.Name
                            </label>
                        </div>
                    }
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Zamknij</button>
                <button type="button" class="btn btn-primary" id="applyFilters">Zastosuj filtry</button>
            </div>
        </div>
    </div>
</div>

<div class="shelter-list">
    @foreach (var shelter in Model.Shelters)
    {
        {
            Debug.WriteLine($"Przetwarzanie {shelter.Name}");
        }
        <div class="shelter-container">
            <div class="shelter-info">
                <h3 style="color:black"><strong>@shelter.Name</strong></h3>
                <div class="shelter-rating">

                    @if (shelter.Rating != null)
                    {
                        <span class="star full">&#9733;</span>
                        <p> <strong style="color:black">@shelter.Rating</strong>/10</p> <p style="font-size: 15px; margin: 10px 0 0 5px">(@shelter.AmountOfReviews)</p>
                    }
                    else
                    {
                        <span class="star empty">&#9733;</span>
                        <p><strong> Brak ocen</strong></p>
                    }
                </div>
                <p class="shelter-description">
                    <strong>Opis:</strong> @shelter.Description
                </p>
                <p class="shelter-description">
                    <strong>Lokalizacja:</strong> @shelter.Country, @shelter.City
                </p>

                @if (shelter.Tags != null && shelter.Tags.Any())
                {
                    @foreach(var tag in shelter.Tags)
                    {
                        {
                            Debug.WriteLine($"For {shelter.Name} Processing tag: {tag.Id} - {tag.Name}");
                        }
                        <p class="tag-item">@tag.Name</p>
                    }
                }
            </div>

            <div class="shelter-photo">
                @if (!string.IsNullOrEmpty(shelter.MainPhotoBase64))
                {
                    {
                        Debug.WriteLine("zdj");
                    }
                    <img loading="lazy" src="data:image;base64,@shelter.MainPhotoBase64" alt="Zdjęcie schroniska" />
                }
            </div>

            <div class="shelter-actions">
                <a style="background-color:darkcyan" asp-action="MapView" asp-controller="Shelters" asp-route-id="@shelter.Id">Pokaż na mapie</a>
                <a style="background-color:aquamarine; color: black" asp-action="Booking" asp-controller="Shelters" asp-route-id="@shelter.Id">Szczegóły</a>
                <a style="background-color:gold; color: black" asp-action="ShelterReviews" asp-controller="Reviews" asp-route-shelterId="@shelter.Id">Recenzje</a>
            </div>
        </div>
        {
            Debug.WriteLine($"Koniec przetwarzania {shelter.Name}");
        }
    }
</div>
    

@if (TempData["ErrorMessage"] != null)
{
    <div class="modal fade" id="errorModal" tabindex="-1" aria-labelledby="errorModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title" id="errorModalLabel">Błąd</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    @TempData["ErrorMessage"]
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Zamknij</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var errorModal = new bootstrap.Modal(document.getElementById('errorModal'));
            errorModal.show();
            console.log('error');
        });
    </script>
}


<script>
    $(document).ready(function () {
        console.log('start');
        $('#applyFilters').on('click', function () {

            $('#mainSearchForm input[name="SelectedTagIds"]').remove();
            $('#mainSearchForm input[name="SelectedRoomTypeIds"]').remove();

            $('.tag-filter:checked').each(function () {
                $('#mainSearchForm').append(
                    `<input type="hidden" name="SelectedTagIds" value="${$(this).val()}" />`
                );
            });

            $('.room-type-filter:checked').each(function () {
                $('#mainSearchForm').append(
                    `<input type="hidden" name="SelectedRoomTypeIds" value="${$(this).val()}" />`
                );
            });

            $('#filterModal').modal('hide');

            $('#mainSearchForm').submit();
            console.log('klik');
        });
        console.log('redi');
    });
</script>
